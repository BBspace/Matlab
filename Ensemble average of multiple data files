%average of n files of experimental data
format long
clear
buffer=[];

path_s=‘F:\…\Results universal 2';

path(path,path_s);

name1a ='Reference_square4400p_200MSs_10avg';
name3='.lvm';

freq= 200*10^6;         %Input sampling frequency

%%%%%%%%%%%%%%%%%%%%%%%%%%
%Processing
n=10;    %load number of files 
for i=1:n;
name2= num2str (i);
name2;
%filename = [name1a,name2,name3];
 filename = [name1a,name3];
A = textread(filename,'',-1,'delimiter','\t', 'headerlines',0,'emptyvalue',NaN);
time= A(:,1)*(1/freq);
ampl=A(:,2);
AMPL_MATRIX(:,i)=ampl;
end
AMPL_MATRIX;

help = size(AMPL_MATRIX);
no_points = help(1,1);

for j = 1:no_points;
av_ampl= mean (AMPL_MATRIX(j,:));
AV_AMPL_MATRIX (j,:)=av_ampl;
end
display (['Amplitude mean from ', num2str(n), ' acquisitions of ', num2str(no_points), ' data points:']);
AV_AMPL_MATRIX;

%%%%%%%%%%%%%%%%%%%%%%
%Plotting
figure(1)
plot(time,AV_AMPL_MATRIX)
xlabel('Time (s)')
ylabel('Amplitude (V)') 
% legend( 'water')
grid on

ampl=AV_AMPL_MATRIX;
size_processed=size(AV_AMPL_MATRIX)

N = length(ampl)
Y = fft(ampl,N);     %converting to the frequency domain /frequency spectrum
Pyy = Y.* conj(Y) / N;   %converting to the power domain (power spectrum / measurement of the power at various frequencies)  

figure(2)
Numpsek=freq;  %Sampling frequency (numbers per second)
Adr = fix(N/2);
f = Numpsek*(0:Adr)/N;
loglog(f,Pyy(1:Adr+1))   %calculated power for plotting, a first half +1 of points (according to pattern in HELP)
Sumcount = sum(Pyy(1:Adr+1));
title('Frequency spectrum')
xlabel('Frequency (Hz)')
ylabel('Amplitude')
grid on

% %%%%%%%%%%%%%%%%%%%%%
% %Saving
% 
% time=A(:,1);
% 
% name4='_PROCESSED';
% savefile = [name1a,name4,name3];
% save(savefile, 'time','AV_AMPL_MATRIX','-ascii');
% 
% clear all
