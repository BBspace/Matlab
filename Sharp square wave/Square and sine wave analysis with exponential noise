%%%% SHARP SQUARE WAVE %%%%

buffer=[];

A=4;
int_freq = 20*10^6
no_cycles= 20
output_freq =  int_freq / no_cycles
no_points_percycle = 200
no_points_perwaveform = no_points_percycle * no_cycles;
t_stop = 1/output_freq;
T= 1/int_freq;   %period of the wave
stepsize = t_stop /(no_points_perwaveform -1);
t=0:stepsize:t_stop;
dt=t(1,2)-t(1,1);
sampling_freq= 1/dt
t0=t_stop/2
sigma =(1/int_freq)*6

help=size(t);
help2=help(1,2);

m=10;        %m must be an even number
t=0;

%%% CHOOSE SQUARE WAVE ---OR--- SINE WAVE

%%%% SINE PART %%%%%%%
% 
% for i=1:help2;  %%% exponential function, loop necessary due to (t-t0)    
% y_sq2 = A*exp((-1)*((t-t0)/sigma)^m)* sin(2*pi()*int_freq*t);
% Y_SQ2(i,1)=y_sq2;
% t=t+stepsize;
% end
% Y_SQ2;
% y_sq2=Y_SQ2;
% size_y_sq2=size(y_sq2)

%%%% SQUARE PART %%%%%%%

for i=1:help2;  %%% exponential function, loop necessary due to (t-t0)    
y_sq2 = A*exp((-1)*((t-t0)/sigma)^m)* sign(sin(2*pi()*int_freq*t));
Y_SQ2(i,1)=y_sq2;
t=t+stepsize;
end
Y_SQ2;
y_sq2=Y_SQ2;
size_y_sq2=size(y_sq2)


%%%%%%%%%%%%%%% NOISE %%%%%%%%%%%%%
t=0:stepsize:t_stop;
noise = 2*(sin(2*pi()*int_freq*0.5*t));
%noise= 2*(sin(2*pi()*int_freq*0.5*t))+ 2*( sin(2*pi()*int_freq*2*t));


figure(1)
plot(t,noise,'-*')
grid on
%%%%%%%%%%%%%%%%%%%%%%%%
t=0:stepsize:t_stop;

%%%% Square part %%%%
time= t;
ampl=y_sq2';        % TRANSFORMED !!!

figure(2)
subplot(2,1,1); plot(time,ampl,'-*')
grid on
xlabel('Time(s)')
ylabel('Amplitude')
title([ num2str(int_freq),' Hz wave'])

N = length(ampl);
Y = fft(ampl,N);     %converting to the frequency domain /frequency spectrum
Pyy = Y.* conj(Y) / N;   %converting to the power domain (power spectrum / measurement of the power at various frequencies)  
Numpsek=1/stepsize;  %Sampling frequency (numbers per second)
Adr = fix(N/2);
f = Numpsek*(0:Adr)/N;
Sumcount = sum(Pyy(1:Adr+1));

        G_in_ampl =Pyy(1:Adr+1);    %ampl spectrum
        size_G_in_ampl=size(G_in_ampl)
        
figure(2)
subplot(2,1,2);loglog(f,Pyy(1:Adr+1))   %calculated power for plotting, a first half +1 of points (according to pattern in HELP)
title('Frequency spectrum , logarithmic scale')
xlabel('Frequency (Hz)')
ylabel('Amplitude')
grid on

%%%%%%%%%%%%%%%%%%%%%%%
% FUNCTION WITH NOISE

y_sq2_noise =  y_sq2' + noise; 

time= t;
ampl_noise=y_sq2_noise;

figure(3)
subplot(2,1,1); plot(time,ampl_noise,'-*')
grid on
xlabel('Time(s)')
ylabel('Amplitude')
title([ num2str(int_freq),' Hz wave with noise'])

N = length(ampl_noise);
Y = fft(ampl_noise,N);     %converting to the frequency domain /frequency spectrum
Pyy = Y.* conj(Y) / N;   %converting to the power domain (power spectrum / measurement of the power at various frequencies)  
Numpsek=1/stepsize;  %Sampling frequency (numbers per second)
Adr = fix(N/2);
f = Numpsek*(0:Adr)/N;
Sumcount = sum(Pyy(1:Adr+1));

        G_out_ampl =Pyy(1:Adr+1);    %ampl_spectr_niose
        size_G_out_ampl=size(G_out_ampl)
        
figure(3)
subplot(2,1,2);loglog(f,Pyy(1:Adr+1))   %calculated power for plotting, a first half +1 of points (according to pattern in HELP)
title('Frequency spectrum of medium response, logarithmic scale')
xlabel('Frequency (Hz)')
ylabel('Amplitude')
grid on

    %H = abs(G_out_ampl  - G_in_ampl);
    H = (G_out_ampl  - G_in_ampl);
    
figure(4)
loglog(f,H)
title('Frequency spectrum difference, logarithmic scale')
xlabel('Frequency (Hz)')
ylabel('Amplitude')
grid on
