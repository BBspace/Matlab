% Cross-correlation

% Chose t1 and t2 of interval, we want to 
% correlate in first signal cycle

buffer=[];
clear all;
format short e

% path(path,’I:\…\ Scattering test 4 low fr particl')
% filename='s2_low_fr_particl_PE_5kHz_vel1_1.lvm'
% 
% 
% %filename='5kHz_water_with_air_bubbles_vel3_20deg_best.lvm'
% A = textread(filename,'',-1,'delimiter','\t','emptyvalue',NaN);
% Freq=200e6;
% PRF=5e3; %Hz
% 
% % time= A(1:80000,1)*(1/Freq);   % 80 000 point is 2 cycles
% % ampl=A(1:80000,2);
% 
% time= A(:,1)*(1/Freq);   % 80 000 point is 2 cycles
% ampl=A(:,2);
%%%

path(path,’I:\…\Processed_applied magnif cross corr')

filename1='1CYC_INT1s2_low_fr_particl_PE_5kHz_vel1_2.lvm'
filename2='2CYC_INT1s2_low_fr_particl_PE_5kHz_vel1_2.lvm'

A1 = textread(filename1,'',-1,'delimiter',' ','emptyvalue',NaN);
A2 = textread(filename2,'',-1,'delimiter',' ','emptyvalue',NaN);
Freq=200e6;
PRF=5e3; %Hz


time1= A1(:,1);   % time from 1st cycle has 600 points 
ampl1=A1(:,2);
S1=length(ampl1) % 600 point (This is DT in MAGN_FUNCTION programme)

time2= A2(:,1);   % time from 2nd cycle has 600 points 
ampl2=A2(:,2);
S2=length(ampl2)

%%% Help "fake" time intervals to fill the gaps with zeroes
%becasue using MAGN_FUNCTION programme intervals are already clipped
time1_help1=[0:(1/Freq):time1(1,1)-(1/Freq)];
time1_help2=[time1(S1,1)+(1/Freq):(1/Freq):time2(1,1)-(1/Freq)];
time1_help3=[time2(S1,1)+(1/Freq):(1/Freq):2*(1/PRF)-(1/Freq)];

time1_help1=time1_help1';
time1_help2=time1_help2';
time1_help3=time1_help3';

length(time1_help1)

ampl1_help1=ones(length(time1_help1),1)*0;
ampl1_help2=ones(length(time1_help2),1)*0;
ampl1_help3=ones(length(time1_help3),1)*0;

P1=size(ampl1_help1)
P2=size(ampl1)


time1_help1(1,1)
time1_help1(length(time1_help1),1)

time1(1,1)
time1(length(time1),1)

time1_help2(1,1)
time1_help2(length(time1_help2),1)

time2(1,1)
time2(length(time2),1)

time1_help3(1,1)
time1_help3(length(time1_help3),1)

%%%
% Combine into one matrix in order to ulilize already written algorithm
time=[time1_help1;time1;time1_help2; time2; time1_help3];
ampl=[ampl1_help1;ampl1;ampl1_help2; ampl2; ampl1_help3];

K1=size(ampl)
K1a=K1(1,1)
K2=size(time)
K2a=K1(1,1)

%%%
ampl=ampl+1;
c_water=1500; %m/s

figure(1)
subplot(2,1,1);
plot(time(1:40000,1),ampl(1:40000,1),time(1:40000,1),ampl(40001:80000,1)+1.5, 'linewidth',2);
get(gca)
set(gca,'fontsize',24)
title('Original signal - 1st and 2nd cycle','fontsize',24)
legend('1st cycle','2nd cycle (shifted)','fontsize',16)
axis([1.5e-5 2e-5 0 4])
xlabel('Time, s','fontsize',24)
ylabel('Amplitude, V','fontsize',24)
 grid on


%Time and amplitude intervals
%Signal 1 

%CASE1
% t1=1.665e-5;
% t2=t1+35*5e-9;



%CASE2
t1=1.587e-5;
t2=t1+30*5e-9;


%t2=0.00015;
DSx = (t2-t1)/(1/Freq) % x sample interval 1480p


n1a=t1/(1/Freq)
n1b=n1a+DSx       % End of 1st time interval      

n1b-n1a

int(:,1)=ampl( n1a:n1b, 1);
int_time(:,1)=time( n1a:n1b, 1);

% %Signal 2
t1_y= t1+(1/PRF)
n1a_y=t1_y/(1/Freq)


a1 = size(time)
a2 = a1(1,1)
t_last=time(a2,1) %absolute last t

n1b_y =t_last/(1/Freq)

int_y(:,1)=ampl( n1a_y:n1b_y, 1); % the whole part of signal that is left
int_time_y(:,1)=time( n1a_y:n1b_y, 1);

figure(1)
subplot(2,1,2);
plot(int_time, int, '-','linewidth',2) %'Markersize',6
get(gca)
set(gca,'fontsize',24)
legend('Subinterval for cross-correlation ','fontsize',16)
axis([1.5e-5 2e-5 0 2])
xlabel('Time, s','fontsize',24)
ylabel('Amplitude, V','fontsize',24)
grid on


% figure(2)
% plot(int_time, int, '-',int_time_y-(1/PRF),int_y,'-', 'linewidth',2) %'Markersize',6
% legend('Interval A', 'Interval B - shifted')
% %axis([0 2e-4 -0.1 0.25])
% xlabel('Time, s)')
% ylabel('Amplitude, V')
% grid on

b1=size(int_y)
b2=b1(1,1)/DSx
    
DSx

tau0 = 0;

%tau_last= (round(b2)-1)*DSx       % GIVES GOOD RESULT 
%tau_last= (round(b2)-2)*DSx 

tau_last=8e-7/(5e-9); %for tau max =6e-7 s, vel max is 2.25 m/s

% Cross-correlation
for k = 1:tau_last       
    tau =tau0;        %SECOND LOOP
        
    for i=1:1:DSx ; %FIRST LOOP

    CCF1(i,1)=int(i,1)*int_y(i + tau,1); 
    CCF2(i,1)=abs(int(i,1)-int_y(i + tau,1)); 
    
    end

CCF_sum1(k,1)=sum(CCF1); % no of points is = Tau+1
tau_true(k,1)=tau*(1/Freq);

CCF_sum2(k,1)=sum(CCF2); % no of points is = Tau+1


tau0=tau+1;

end
CCF_sum1;
CCF_sum2;
tau_true;


figure(3)
subplot(2,1,1)
plot(tau_true(:,1),CCF_sum2(:,1),'-','linewidth',2) %'Markersize',6
get(gca)
set(gca,'fontsize',24)
legend('CCF1(i,1)=sum[abs(v1(i,1)-v2(i + tau,1))], V','fontsize',16)
xlabel('Tau = Delta t, s','fontsize',24)
ylabel('CCF1','fontsize',24)
grid on

subplot(2,1,2)
plot(tau_true(:,1),CCF_sum1(:,1),'-','linewidth',2) %'Markersize',6
get(gca)
set(gca,'fontsize',24)
legend('CCF2(i,1)=sum[v1(i,1)*v2(i + tau,1)]','fontsize',16)
xlabel('Tau = Delta t, s','fontsize',24)
ylabel('CCF2','fontsize',24)
grid on

DSx
